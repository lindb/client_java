name: Pushlish Java Client to OSSRH 
on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

jobs:
  test-with-coverage:
    name: Publish package 
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          ref: ${{ github.ref_name }}
      - name: Generate release changelog
        id: generate_changelog
        uses: mikepenz/release-changelog-builder-action@v3.7.1
        with:
          configuration: ".github/configuration.json"
      - name: Modify version
        id: version
        run: |
          VERSION=${{ steps.generate_changelog.outputs.toTag}}
          echo "version=${VERSION:1}" >> $GITHUB_OUTPUT
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '11'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key pcassphrase
      - name: Modify pom version 
        run: |
          mvn versions:set -DnewVersion=${{ steps.version.outputs.version }}
      - name: Publish package
        run: mvn --batch-mode clean deploy -Dmaven.exec.skip=true
        if: github.event_name != 'workflow_dispatch'
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.generate_changelog.outputs.toTag }}
          release_name: ${{ steps.generate_changelog.outputs.toTag }}
          body: "${{ steps.generate_changelog.outputs.changelog }}"
      - name: Checkout main 
        run: |
          git fetch origin main
          git checkout main
          mvn versions:set -DnewVersion=${{ steps.version.outputs.version }}
      - name: Create changelog pull request
        id: cpr
        uses: peter-evans/create-pull-request@v5
        with:
          commit-message: "[chore]: modify version(${{ steps.generate_changelog.outputs.toTag }})"
          branch: versions 
          signoff: true
          delete-branch: true
          title: "[chore]: modify version(${{ steps.generate_changelog.outputs.toTag }})"
          body: |
            Modify pom.xml version
            - Auto-generated by [create-pull-request][1]
            [1]: https://github.com/peter-evans/create-pull-request
          labels: |
            release_bot
      - name: Auto merge pull request
        if: steps.cpr.outputs.pull-request-operation == 'created'
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: rebase

